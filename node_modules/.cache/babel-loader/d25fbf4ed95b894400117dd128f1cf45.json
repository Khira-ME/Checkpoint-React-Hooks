{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mechr\\\\Desktop\\\\T.GoMy Code\\\\CheckPoint Khira\\\\17. Checkpoint\\\\React Hooks Checkpoint\\\\react-movie-app\\\\src\\\\Component\\\\AddMovie.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\nexport const AddMovie = props => {\n  _s();\n\n  //React Hooks\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalInputTitle, setModalInputTitle] = useState('');\n  const [modalInputPoster, setModalInputPoster] = useState('');\n  const [modalInputRating, setModalInputRating] = useState('');\n  const [modalInputDescription, setModalInputDescription] = useState(''); //Modal Show On/Off\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    props.onOk({\n      title: modalInputTitle,\n      posterUrl: modalInputPoster,\n      rate: modalInputRating,\n      description: modalInputDescription\n    });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  }; //Get data from modal and passed to MovieList as a callback function\n\n\n  const modalTitleHandler = e => {\n    setModalInputTitle(e.target.value);\n  };\n\n  const modalPosterHandler = e => {\n    setModalInputPoster(e.target.value);\n  };\n\n  const modalRatingHandler = e => {\n    setModalInputRating(e.target.value);\n  };\n\n  const modalDescriptionHandler = e => {\n    setModalInputDescription(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: showModal,\n      shape: \"circle\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"addBtn\",\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Add Movie\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      className: \"pop-up-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie title :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"movie title...\",\n        value: modalInputTitle,\n        onChange: modalTitleHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Poster :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add a valid url link...\",\n        value: modalInputPoster,\n        onChange: modalPosterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Rating :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"add a rating from 0 to 5...\",\n        value: modalInputRating,\n        onChange: modalRatingHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"add your description\",\n        value: modalInputDescription,\n        onChange: modalDescriptionHandler,\n        cols: \"35\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddMovie, \"ldiIbs27f208m74J903Z/cwdZ1k=\");\n\n_c = AddMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"sources":["C:/Users/mechr/Desktop/T.GoMy Code/CheckPoint Khira/17. Checkpoint/React Hooks Checkpoint/react-movie-app/src/Component/AddMovie.js"],"names":["useState","Modal","Button","AddMovie","props","isModalVisible","setIsModalVisible","modalInputTitle","setModalInputTitle","modalInputPoster","setModalInputPoster","modalInputRating","setModalInputRating","modalInputDescription","setModalInputDescription","showModal","handleOk","onOk","title","posterUrl","rate","description","handleCancel","modalTitleHandler","e","target","value","modalPosterHandler","modalRatingHandler","modalDescriptionHandler"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport { Modal, Button } from 'antd';\nimport 'antd/dist/antd.css';\n\nexport const AddMovie = (props) => {\n    //React Hooks\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [modalInputTitle, setModalInputTitle] = useState('');\n    const [modalInputPoster, setModalInputPoster] = useState('');\n    const [modalInputRating, setModalInputRating] = useState('');\n    const [modalInputDescription, setModalInputDescription] = useState('');\n    //Modal Show On/Off\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n    const handleOk = () => {\n        props.onOk({title : modalInputTitle,posterUrl : modalInputPoster,rate : modalInputRating, description : modalInputDescription});\n        setIsModalVisible(false);\n    };\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    //Get data from modal and passed to MovieList as a callback function\n    const modalTitleHandler = e => {\n        setModalInputTitle(e.target.value)\n    };\n    const modalPosterHandler = e => {\n        setModalInputPoster(e.target.value)\n    };\n    const modalRatingHandler = e => {\n        setModalInputRating(e.target.value)\n    };\n    const modalDescriptionHandler = e => {\n        setModalInputDescription(e.target.value)\n    }\n\n    return (\n    <>\n        <Button type=\"danger\" onClick={showModal} shape=\"circle\">\n            <p className='addBtn'>Add Movie</p>\n        </Button>\n        <Modal title=\"Add Movie\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} className='pop-up-modal'>\n            <label>Movie title :</label>\n            <br></br>\n            <input type='text' \n                placeholder=\"movie title...\"\n                value={modalInputTitle}\n                onChange={modalTitleHandler}>\n            </input>\n            <br></br>\n            <label>Movie Poster :</label>\n            <br></br>\n            <input type='text' \n                placeholder=\"add a valid url link...\"\n                value={modalInputPoster}\n                onChange={modalPosterHandler}>\n            </input>\n            <br></br>\n            <label>Movie Rating :</label>\n            <br></br>\n            <input type='number' \n                placeholder=\"add a rating from 0 to 5...\"\n                value={modalInputRating}\n                onChange={modalRatingHandler}>\n            </input>\n            <br></br>\n            <label>Description :</label>\n            <br></br>\n            <textarea type='text'\n                placeholder='add your description'\n                value={modalInputDescription}\n                onChange={modalDescriptionHandler}\n                cols='35'\n                rows='8'>\n            </textarea>\n        </Modal>\n    </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}